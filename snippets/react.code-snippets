{
  "reactFunctionalComponent": {
    "prefix": "rfc",
    "description": "Creates a React Functional Component with ES7 module system",
    "body": [
      "export default function ${TM_FILENAME_BASE}() {",
      "  return (",
      "    <>${1:first}</>",
      "  )",
      "}",
      ""
    ]
  },
  "useCallback": {
    "prefix": "useCallback",
    "body": [
      "useCallback(",
      "  () => {",
      "    ${1:first}",
      "  },",
      "  [${2:second}],",
      ")",
      ""
    ]
  },
  "useContext": {
    "prefix": "useContext",
    "body": [
      "const ${1:first} = useContext(${2:second})"
    ]
  },
  "useEffect": {
    "prefix": "useEffect",
    "body": [
      "useEffect(() => {",
      "  ${1:first}",
      "",
      "  return () => {",
      "    ${2:second}",
      "  }",
      "}, [${3:third}])",
      ""
    ]
  },
  "useImperativeHandle": {
    "prefix": "useImperativeHandle",
    "body": [
      "useImperativeHandle(",
      "  ${1:first},",
      "  () => {",
      "    ${2:second}",
      "  },",
      "  [${3:third}],",
      ")"
    ]
  },
  "useLayoutEffect": {
    "prefix": "useLayoutEffect",
    "body": [
      "useLayoutEffect(() => {",
      "  ${1:first}",
      "",
      "  return () => {",
      "    ${2:second}",
      "  };",
      "}, [${3:third}])"
    ]
  },
  "useMemo": {
    "prefix": "useMemo",
    "body": [
      "useMemo(() => ${1:first}, [${2:second}])"
    ]
  },
  "useReducer": {
    "prefix": "useReducer",
    "body": [
      "const [state, dispatch] = useReducer(${1:first}, ${2:second}, ${3:third})"
    ]
  },
  "useRef": {
    "prefix": "useRef",
    "body": [
      "const ${1:first} = useRef(${2:second})"
    ]
  },
  "useState": {
    "prefix": "useState",
    "body": [
      "const [${1:first}, set${1/(.*)/${1:/capitalize}/}] = useState(${2:second})"
    ]
  }
}